//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace KDictionary.DictionaryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WebXml.com.cn/", ConfigurationName="DictionaryService.EnglishChineseSoap")]
    public interface EnglishChineseSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/Translator", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTranslator(string wordKey, System.AsyncCallback callback, object asyncState);
        
        KDictionary.DictionaryService.ArrayOfXElement EndTranslator(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/TranslatorString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTranslatorString(string wordKey, System.AsyncCallback callback, object asyncState);
        
        string[] EndTranslatorString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/TranslatorReferString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTranslatorReferString(string wordKey, System.AsyncCallback callback, object asyncState);
        
        string[] EndTranslatorReferString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/TranslatorSentenceString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginTranslatorSentenceString(string wordKey, System.AsyncCallback callback, object asyncState);
        
        string[] EndTranslatorSentenceString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/SuggestWord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginSuggestWord(string wordKey, System.AsyncCallback callback, object asyncState);
        
        string[] EndSuggestWord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://WebXml.com.cn/GetMp3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginGetMp3(KDictionary.DictionaryService.GetMp3Request request, System.AsyncCallback callback, object asyncState);
        
        KDictionary.DictionaryService.GetMp3Response EndGetMp3(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMp3", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class GetMp3Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        public string Mp3;
        
        public GetMp3Request() {
        }
        
        public GetMp3Request(string Mp3) {
            this.Mp3 = Mp3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMp3Response", WrapperNamespace="http://WebXml.com.cn/", IsWrapped=true)]
    public partial class GetMp3Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WebXml.com.cn/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetMp3Result;
        
        public GetMp3Response() {
        }
        
        public GetMp3Response(byte[] GetMp3Result) {
            this.GetMp3Result = GetMp3Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EnglishChineseSoapChannel : KDictionary.DictionaryService.EnglishChineseSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TranslatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public KDictionary.DictionaryService.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((KDictionary.DictionaryService.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslatorStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TranslatorStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslatorReferStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TranslatorReferStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslatorSentenceStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TranslatorSentenceStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SuggestWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SuggestWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMp3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMp3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnglishChineseSoapClient : System.ServiceModel.ClientBase<KDictionary.DictionaryService.EnglishChineseSoap>, KDictionary.DictionaryService.EnglishChineseSoap {
        
        private BeginOperationDelegate onBeginTranslatorDelegate;
        
        private EndOperationDelegate onEndTranslatorDelegate;
        
        private System.Threading.SendOrPostCallback onTranslatorCompletedDelegate;
        
        private BeginOperationDelegate onBeginTranslatorStringDelegate;
        
        private EndOperationDelegate onEndTranslatorStringDelegate;
        
        private System.Threading.SendOrPostCallback onTranslatorStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginTranslatorReferStringDelegate;
        
        private EndOperationDelegate onEndTranslatorReferStringDelegate;
        
        private System.Threading.SendOrPostCallback onTranslatorReferStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginTranslatorSentenceStringDelegate;
        
        private EndOperationDelegate onEndTranslatorSentenceStringDelegate;
        
        private System.Threading.SendOrPostCallback onTranslatorSentenceStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginSuggestWordDelegate;
        
        private EndOperationDelegate onEndSuggestWordDelegate;
        
        private System.Threading.SendOrPostCallback onSuggestWordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMp3Delegate;
        
        private EndOperationDelegate onEndGetMp3Delegate;
        
        private System.Threading.SendOrPostCallback onGetMp3CompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EnglishChineseSoapClient() {
        }
        
        public EnglishChineseSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnglishChineseSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnglishChineseSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnglishChineseSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<TranslatorCompletedEventArgs> TranslatorCompleted;
        
        public event System.EventHandler<TranslatorStringCompletedEventArgs> TranslatorStringCompleted;
        
        public event System.EventHandler<TranslatorReferStringCompletedEventArgs> TranslatorReferStringCompleted;
        
        public event System.EventHandler<TranslatorSentenceStringCompletedEventArgs> TranslatorSentenceStringCompleted;
        
        public event System.EventHandler<SuggestWordCompletedEventArgs> SuggestWordCompleted;
        
        public event System.EventHandler<GetMp3CompletedEventArgs> GetMp3Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginTranslator(string wordKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTranslator(wordKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KDictionary.DictionaryService.ArrayOfXElement KDictionary.DictionaryService.EnglishChineseSoap.EndTranslator(System.IAsyncResult result) {
            return base.Channel.EndTranslator(result);
        }
        
        private System.IAsyncResult OnBeginTranslator(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wordKey = ((string)(inValues[0]));
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginTranslator(wordKey, callback, asyncState);
        }
        
        private object[] OnEndTranslator(System.IAsyncResult result) {
            KDictionary.DictionaryService.ArrayOfXElement retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndTranslator(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTranslatorCompleted(object state) {
            if ((this.TranslatorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TranslatorCompleted(this, new TranslatorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TranslatorAsync(string wordKey) {
            this.TranslatorAsync(wordKey, null);
        }
        
        public void TranslatorAsync(string wordKey, object userState) {
            if ((this.onBeginTranslatorDelegate == null)) {
                this.onBeginTranslatorDelegate = new BeginOperationDelegate(this.OnBeginTranslator);
            }
            if ((this.onEndTranslatorDelegate == null)) {
                this.onEndTranslatorDelegate = new EndOperationDelegate(this.OnEndTranslator);
            }
            if ((this.onTranslatorCompletedDelegate == null)) {
                this.onTranslatorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTranslatorCompleted);
            }
            base.InvokeAsync(this.onBeginTranslatorDelegate, new object[] {
                        wordKey}, this.onEndTranslatorDelegate, this.onTranslatorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginTranslatorString(string wordKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTranslatorString(wordKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] KDictionary.DictionaryService.EnglishChineseSoap.EndTranslatorString(System.IAsyncResult result) {
            return base.Channel.EndTranslatorString(result);
        }
        
        private System.IAsyncResult OnBeginTranslatorString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wordKey = ((string)(inValues[0]));
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginTranslatorString(wordKey, callback, asyncState);
        }
        
        private object[] OnEndTranslatorString(System.IAsyncResult result) {
            string[] retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndTranslatorString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTranslatorStringCompleted(object state) {
            if ((this.TranslatorStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TranslatorStringCompleted(this, new TranslatorStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TranslatorStringAsync(string wordKey) {
            this.TranslatorStringAsync(wordKey, null);
        }
        
        public void TranslatorStringAsync(string wordKey, object userState) {
            if ((this.onBeginTranslatorStringDelegate == null)) {
                this.onBeginTranslatorStringDelegate = new BeginOperationDelegate(this.OnBeginTranslatorString);
            }
            if ((this.onEndTranslatorStringDelegate == null)) {
                this.onEndTranslatorStringDelegate = new EndOperationDelegate(this.OnEndTranslatorString);
            }
            if ((this.onTranslatorStringCompletedDelegate == null)) {
                this.onTranslatorStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTranslatorStringCompleted);
            }
            base.InvokeAsync(this.onBeginTranslatorStringDelegate, new object[] {
                        wordKey}, this.onEndTranslatorStringDelegate, this.onTranslatorStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginTranslatorReferString(string wordKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTranslatorReferString(wordKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] KDictionary.DictionaryService.EnglishChineseSoap.EndTranslatorReferString(System.IAsyncResult result) {
            return base.Channel.EndTranslatorReferString(result);
        }
        
        private System.IAsyncResult OnBeginTranslatorReferString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wordKey = ((string)(inValues[0]));
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginTranslatorReferString(wordKey, callback, asyncState);
        }
        
        private object[] OnEndTranslatorReferString(System.IAsyncResult result) {
            string[] retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndTranslatorReferString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTranslatorReferStringCompleted(object state) {
            if ((this.TranslatorReferStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TranslatorReferStringCompleted(this, new TranslatorReferStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TranslatorReferStringAsync(string wordKey) {
            this.TranslatorReferStringAsync(wordKey, null);
        }
        
        public void TranslatorReferStringAsync(string wordKey, object userState) {
            if ((this.onBeginTranslatorReferStringDelegate == null)) {
                this.onBeginTranslatorReferStringDelegate = new BeginOperationDelegate(this.OnBeginTranslatorReferString);
            }
            if ((this.onEndTranslatorReferStringDelegate == null)) {
                this.onEndTranslatorReferStringDelegate = new EndOperationDelegate(this.OnEndTranslatorReferString);
            }
            if ((this.onTranslatorReferStringCompletedDelegate == null)) {
                this.onTranslatorReferStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTranslatorReferStringCompleted);
            }
            base.InvokeAsync(this.onBeginTranslatorReferStringDelegate, new object[] {
                        wordKey}, this.onEndTranslatorReferStringDelegate, this.onTranslatorReferStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginTranslatorSentenceString(string wordKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTranslatorSentenceString(wordKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] KDictionary.DictionaryService.EnglishChineseSoap.EndTranslatorSentenceString(System.IAsyncResult result) {
            return base.Channel.EndTranslatorSentenceString(result);
        }
        
        private System.IAsyncResult OnBeginTranslatorSentenceString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wordKey = ((string)(inValues[0]));
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginTranslatorSentenceString(wordKey, callback, asyncState);
        }
        
        private object[] OnEndTranslatorSentenceString(System.IAsyncResult result) {
            string[] retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndTranslatorSentenceString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTranslatorSentenceStringCompleted(object state) {
            if ((this.TranslatorSentenceStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TranslatorSentenceStringCompleted(this, new TranslatorSentenceStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TranslatorSentenceStringAsync(string wordKey) {
            this.TranslatorSentenceStringAsync(wordKey, null);
        }
        
        public void TranslatorSentenceStringAsync(string wordKey, object userState) {
            if ((this.onBeginTranslatorSentenceStringDelegate == null)) {
                this.onBeginTranslatorSentenceStringDelegate = new BeginOperationDelegate(this.OnBeginTranslatorSentenceString);
            }
            if ((this.onEndTranslatorSentenceStringDelegate == null)) {
                this.onEndTranslatorSentenceStringDelegate = new EndOperationDelegate(this.OnEndTranslatorSentenceString);
            }
            if ((this.onTranslatorSentenceStringCompletedDelegate == null)) {
                this.onTranslatorSentenceStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTranslatorSentenceStringCompleted);
            }
            base.InvokeAsync(this.onBeginTranslatorSentenceStringDelegate, new object[] {
                        wordKey}, this.onEndTranslatorSentenceStringDelegate, this.onTranslatorSentenceStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginSuggestWord(string wordKey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSuggestWord(wordKey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string[] KDictionary.DictionaryService.EnglishChineseSoap.EndSuggestWord(System.IAsyncResult result) {
            return base.Channel.EndSuggestWord(result);
        }
        
        private System.IAsyncResult OnBeginSuggestWord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wordKey = ((string)(inValues[0]));
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginSuggestWord(wordKey, callback, asyncState);
        }
        
        private object[] OnEndSuggestWord(System.IAsyncResult result) {
            string[] retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndSuggestWord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSuggestWordCompleted(object state) {
            if ((this.SuggestWordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SuggestWordCompleted(this, new SuggestWordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SuggestWordAsync(string wordKey) {
            this.SuggestWordAsync(wordKey, null);
        }
        
        public void SuggestWordAsync(string wordKey, object userState) {
            if ((this.onBeginSuggestWordDelegate == null)) {
                this.onBeginSuggestWordDelegate = new BeginOperationDelegate(this.OnBeginSuggestWord);
            }
            if ((this.onEndSuggestWordDelegate == null)) {
                this.onEndSuggestWordDelegate = new EndOperationDelegate(this.OnEndSuggestWord);
            }
            if ((this.onSuggestWordCompletedDelegate == null)) {
                this.onSuggestWordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSuggestWordCompleted);
            }
            base.InvokeAsync(this.onBeginSuggestWordDelegate, new object[] {
                        wordKey}, this.onEndSuggestWordDelegate, this.onSuggestWordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult KDictionary.DictionaryService.EnglishChineseSoap.BeginGetMp3(KDictionary.DictionaryService.GetMp3Request request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMp3(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMp3(string Mp3, System.AsyncCallback callback, object asyncState) {
            KDictionary.DictionaryService.GetMp3Request inValue = new KDictionary.DictionaryService.GetMp3Request();
            inValue.Mp3 = Mp3;
            return ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).BeginGetMp3(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        KDictionary.DictionaryService.GetMp3Response KDictionary.DictionaryService.EnglishChineseSoap.EndGetMp3(System.IAsyncResult result) {
            return base.Channel.EndGetMp3(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private byte[] EndGetMp3(System.IAsyncResult result) {
            KDictionary.DictionaryService.GetMp3Response retVal = ((KDictionary.DictionaryService.EnglishChineseSoap)(this)).EndGetMp3(result);
            return retVal.GetMp3Result;
        }
        
        private System.IAsyncResult OnBeginGetMp3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Mp3 = ((string)(inValues[0]));
            return this.BeginGetMp3(Mp3, callback, asyncState);
        }
        
        private object[] OnEndGetMp3(System.IAsyncResult result) {
            byte[] retVal = this.EndGetMp3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMp3Completed(object state) {
            if ((this.GetMp3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMp3Completed(this, new GetMp3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMp3Async(string Mp3) {
            this.GetMp3Async(Mp3, null);
        }
        
        public void GetMp3Async(string Mp3, object userState) {
            if ((this.onBeginGetMp3Delegate == null)) {
                this.onBeginGetMp3Delegate = new BeginOperationDelegate(this.OnBeginGetMp3);
            }
            if ((this.onEndGetMp3Delegate == null)) {
                this.onEndGetMp3Delegate = new EndOperationDelegate(this.OnEndGetMp3);
            }
            if ((this.onGetMp3CompletedDelegate == null)) {
                this.onGetMp3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMp3Completed);
            }
            base.InvokeAsync(this.onBeginGetMp3Delegate, new object[] {
                        Mp3}, this.onEndGetMp3Delegate, this.onGetMp3CompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override KDictionary.DictionaryService.EnglishChineseSoap CreateChannel() {
            return new EnglishChineseSoapClientChannel(this);
        }
        
        private class EnglishChineseSoapClientChannel : ChannelBase<KDictionary.DictionaryService.EnglishChineseSoap>, KDictionary.DictionaryService.EnglishChineseSoap {
            
            public EnglishChineseSoapClientChannel(System.ServiceModel.ClientBase<KDictionary.DictionaryService.EnglishChineseSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTranslator(string wordKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wordKey;
                System.IAsyncResult _result = base.BeginInvoke("Translator", _args, callback, asyncState);
                return _result;
            }
            
            public KDictionary.DictionaryService.ArrayOfXElement EndTranslator(System.IAsyncResult result) {
                object[] _args = new object[0];
                KDictionary.DictionaryService.ArrayOfXElement _result = ((KDictionary.DictionaryService.ArrayOfXElement)(base.EndInvoke("Translator", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTranslatorString(string wordKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wordKey;
                System.IAsyncResult _result = base.BeginInvoke("TranslatorString", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndTranslatorString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("TranslatorString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTranslatorReferString(string wordKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wordKey;
                System.IAsyncResult _result = base.BeginInvoke("TranslatorReferString", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndTranslatorReferString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("TranslatorReferString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTranslatorSentenceString(string wordKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wordKey;
                System.IAsyncResult _result = base.BeginInvoke("TranslatorSentenceString", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndTranslatorSentenceString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("TranslatorSentenceString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSuggestWord(string wordKey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wordKey;
                System.IAsyncResult _result = base.BeginInvoke("SuggestWord", _args, callback, asyncState);
                return _result;
            }
            
            public string[] EndSuggestWord(System.IAsyncResult result) {
                object[] _args = new object[0];
                string[] _result = ((string[])(base.EndInvoke("SuggestWord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMp3(KDictionary.DictionaryService.GetMp3Request request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMp3", _args, callback, asyncState);
                return _result;
            }
            
            public KDictionary.DictionaryService.GetMp3Response EndGetMp3(System.IAsyncResult result) {
                object[] _args = new object[0];
                KDictionary.DictionaryService.GetMp3Response _result = ((KDictionary.DictionaryService.GetMp3Response)(base.EndInvoke("GetMp3", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.Phone.ServiceReference", "3.7.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
